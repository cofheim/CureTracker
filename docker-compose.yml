services:
  # Сервис базы данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    #  ports:
    #    - "5432:5432"

  backend:
    build: ./backend
    restart: always
    #  ports:
    #    - "8081:8080"
    environment:
      ConnectionStrings__CureTrackerDbContext: "Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};"
      TelegramBot__Token: ${TELEGRAM_TOKEN}
      JwtOptions__Secret: ${JWT_SECRET}
      ASPNETCORE_URLS: "http://+:8080"
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    restart: always
    #  ports:
    #    - "3000:3000"
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://curetracker.ru
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    container_name: curetracker_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  certbot_conf:
  certbot_www:
  certbot_logs: